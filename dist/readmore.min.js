"use strict";function readMore(e){function t(e,t,o){function s(){o.debug("setToggleMoreText"),c.toggle.moreText=c.hmMoreText||"Read more"}function n(){o.debug("setToggleLessText"),c.toggle.lessText=c.hmLessText||"Read less"}function m(){o.debug("setCurrentToggleText"),c.toggle.text=c.toggle.state?c.toggle.lessText:c.toggle.moreText}function l(){o.debug("setShowToggle"),c.toggle.show=c.moreText&&c.moreText.length>0}function g(){o.debug("setLinkClass"),c.toggle.linkClass=c.hmLinkClass}function i(){o.debug("setDotsClass"),c.toggle.dotsClass=c.hmDotsClass}function a(){o.debug("setHtmlMode");var e=void 0===c.hmHtml||c.hmHtml;"string"==typeof e&&(e=e.toLowerCase(),e="true"==e||"on"==e),c.htmlAllowed=e}function h(){o.debug("validateLimit"),c.hmLimit=c.hmLimit&&c.hmLimit<=0?void 0:c.hmLimit}function r(){return o.debug("getMoreTextLimit"),c.hmLimit&&c.hmLimit<c.hmText.length?c.hmLimit-c.hmText.length:0}function d(){o.debug("setLessAndMoreText"),c.lessText=e("limitTo")(c.hmText,c.hmLimit),c.moreText=e("limitTo")(c.hmText,r())}var c=this;c.toggle={dots:"...",dotsClass:c.hmDotsClass,linkClass:c.hmLinkClass},c.$onInit=function(){o.debug("initialize"),s(),n(),h(),d(),l(),m(),g(),i(),a()},c.doToggle=function(){o.debug("doToggle"),c.toggle.state=!c.toggle.state,c.showMoreText=!c.showMoreText,m()},t.$watch("vm.hmMoreText",function(e,t){e!=t&&(o.debug("hmMoreText changed"),s(),m())}),t.$watch("vm.hmLessText",function(e,t){e!=t&&(o.debug("hmLessText changed"),n(),m())}),t.$watch("vm.hmDotsClass",function(e,t){e!=t&&(o.debug("hmDotsClass changed"),i())}),t.$watch("vm.hmLinkClass",function(e,t){e!=t&&(o.debug("hmLinkClass changed"),g())}),t.$watch("vm.hmText",function(e,t){e!=t&&(o.debug("hmText changed"),h(),d(),l())}),t.$watch("vm.hmLimit",function(e,t){e!=t&&(o.debug("hmLimit changed"),h(),d(),l())})}return t.$inject=["$filter","$scope","$log"],{restrict:"AE",scope:{hmText:"@",hmLimit:"@",hmMoreText:"@",hmLessText:"@",hmDotsClass:"@",hmLinkClass:"@",hmHtml:"@"},template:e.get("readmore.template.html"),controller:t,controllerAs:"vm",bindToController:!0}}readMore.$inject=["$templateCache"],angular.module("hm.readmore",["ngAnimate","ngSanitize"]).directive("hmReadMore",readMore).config(["$logProvider",function(e){e.debugEnabled(!1)}]),angular.module("hm.readmore").run(["$templateCache",function(e){e.put("readmore.template.html",'<span name="text"><span ng-if="!vm.htmlAllowed" ng-bind="vm.lessText" style="white-space:pre-wrap;"></span><span ng-if="!vm.htmlAllowed" ng-show="vm.showMoreText" class="more-show-hide" ng-bind="vm.moreText" style="white-space:pre-wrap;"></span><span ng-if="vm.htmlAllowed" ng-bind-html="vm.lessText" style="white-space:pre-wrap;"></span><span ng-if="vm.htmlAllowed" ng-show="vm.showMoreText" class="more-show-hide" ng-bind-html="vm.moreText" style="white-space:pre-wrap;"></span></span><span name="toggle" ng-show="vm.toggle.show"><span ng-class="vm.toggle.dotsClass" ng-show="!vm.toggle.state">{{ vm.toggle.dots }}</span><a ng-class="vm.toggle.linkClass" ng-click="vm.doToggle()">{{ vm.toggle.text }}</a></span>')}]);